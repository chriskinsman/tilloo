apiVersion: v1
kind: ServiceAccount
metadata:
  name: tilloo-admin
  namespace: tilloo-services
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: tilloo-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: tilloo-admin
    namespace: tilloo-services
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
  namespace: tilloo-services
spec:
  ports:
    - port: 5672
      targetPort: 5672
  selector:
    app: rabbitmq
    namespace: tilloo-services
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deployment
  namespace: tilloo-services
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: rabbitmq
      namespace: tilloo-services
  template:
    metadata:
      labels:
        app: rabbitmq
        namespace: tilloo-services
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-alpine
          ports:
            - containerPort: 5672
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 800m
              memory: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: scheduler-service
  namespace: tilloo-services
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /socket.io/
    alb.ingress.kubernetes.io/success-codes: "400"
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=86400
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: scheduler
    namespace: tilloo-services
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scheduler-deployment
  namespace: tilloo-services
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: scheduler
      namespace: tilloo-services
  template:
    metadata:
      labels:
        app: scheduler
        namespace: tilloo-services
    spec:
      serviceAccountName: tilloo-admin
      containers:
        - name: scheduler
          image: ghcr.io/chriskinsman/tilloo:latest
          # env:
          # - name: DEBUG
          #   value: tilloo:*
          command: ["/tilloo/bin/scheduler.js"]
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1000m
              memory: 2Gi
          volumeMounts:
            - mountPath: /tilloo/config
              name: config-volume
      volumes:
        - name: config-volume
          configMap:
            name: tilloo-config
---
apiVersion: v1
kind: Service
metadata:
  name: web-service
  namespace: tilloo-services
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: web
    namespace: tilloo-services
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  namespace: tilloo-services
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: web
      namespace: tilloo-services
  template:
    metadata:
      labels:
        app: web
        namespace: tilloo-services
    spec:
      serviceAccountName: tilloo-admin
      containers:
        - name: web
          image: ghcr.io/chriskinsman/tilloo:latest
          # env:
          # - name: DEBUG
          #   value: tilloo:*
          command: ["/tilloo/app/app.js"]
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 800m
              memory: 1Gi
          volumeMounts:
            - mountPath: /tilloo/config
              name: config-volume
      volumes:
        - name: config-volume
          configMap:
            name: tilloo-config
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: logger
  namespace: tilloo-services
spec:
  selector:
    matchLabels:
      app: logger
      namespace: tilloo-services
  template:
    metadata:
      labels:
        app: logger
        namespace: tilloo-services
    spec:
      serviceAccountName: tilloo-admin
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
        - name: logger
          image: ghcr.io/chriskinsman/tilloo:latest
          # env:
          # - name: DEBUG
          #   value: tilloo:logforwarder
          command: ["/tilloo/bin/k8slogger.js"]
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1000m
              memory: 2Gi
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - mountPath: /tilloo/config
              name: config-volume
      terminationGracePeriodSeconds: 30
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
            type: Directory
        - name: config-volume
          configMap:
            name: tilloo-config
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tilloo-ingress
  namespace: tilloo-services
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/ip-address-type: ipv4
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/success-codes: 200,404
    alb.ingress.kubernetes.io/security-groups: sg-0d6a7053d46a50e84

spec:
  rules:
    - host: tilloo4.pushspring.com
      http:
        paths:
          - path: /socket.io/
            pathType: Prefix
            backend:
              service:
                name: scheduler-service
                port:
                  number: 80
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-service
                port:
                  number: 80
---

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tilloo-config
  namespace: tilloo-services
  labels:
    app: config
data:
  config.json: |-
    {
        "db": "mongodb://root:kFGJgJEdrE@mongodb.tilloo-services.svc.cluster.local:27017/tilloo?authSource=admin",
        "rabbitmq": {
            "host": "rabbitmq-service.tilloo-services",
            "port": 5672
        },
        "scheduler": {
            "zombieAge": 5,
            "zombieFrequency": 5,
            "jobCleanupFrequency": 60
        },
        "notification": {
            "threshold": 3600,
            "plugins": {}
        },
        "jobEnvironmentVariables": {
            "NODE_ENV": "production"
        }
    }
